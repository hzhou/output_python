subcode: check_if_regex
    my ($pre, $str, $not)
    $if $param=~/^([^\/]+) (and|or)\s*(.*)/
        # only support tailing regex for now
        $pre = "$1 $2 "
        $param=$3

    $if $param=~/^(.+?)\s*([=!]~)\s*(\/.*)/
        $str = $1
        $if $2 eq "!~"
            $not = 1
        $param = $3
    $else
        $str = MyDef::compileutil::get_macro_word("re_str", 1)

    $if $param=~/^\/(.*)\/(\w*)\s*(.*)$/ -> $pat, $flags, $caps
        $if $caps=~/->\s*(.+)$/
            $caps=$1

        my $use_RE=MyDef::compileutil::get_macro_word("use_RE", 1)
        my $re
        $if $use_RE
            $re = "RE"
        $else
            add_import("re")
            $re = "re"

        $if $not
            $re = "not $re"

        $if substr($pat, 0, 1) eq "^"
            $re.=".match"
            substr($pat, 0, 1) = ""
        $else
            $re.=".search"

        $re.="(r'$pat', $str"
        $call @append_flags
        $re.=")"

        push @$out, "$func $pre$re:"
        $if $caps
            my (@tlist, @glist)
            my $i=0
            $foreach $t in split /,\s*/, $caps
                $i++
                $if $t ne "_"
                    push @tlist, $t
                    push @glist, $i
            my $tlist=join(', ', @tlist)
            my $glist=join(', ', @glist)
            $if $use_RE
                push @$out, "    $tlist = RE.m.group($glist)"
            $else
                push @$out, "    m = $re"
                push @$out, "    $tlist = m.group($glist)"
        return 0

    subcode: append_flags
        $if $flags
            my @tlist=split //, $flags
            my @flist
            $foreach $t in @tlist
                $if $t=~/([imsx])/
                    push @flist, "re.".uc($1)

            $if @flist
                $re.=", ".join('|', @flist)

# --------------------------------- 
#-- assumes global: src, src_pos, src_len
subcode: if_match
    my $n=0
    $if length($param)==1 and $param!~/\w/
        &call return_newblock, if
            push @src, "if src_pos<src_len and src[src_pos]=='$param':", "INDENT", "src_pos+=1","BLOCK","DEDENT"

    #-- keyword --
    $if $param=~/^([^*|?+()\[\]{}'"]+)$/
        $param="r\"$param\\b\""

    $global $re_index=0, %re_cache
    add_import("re")
    my $re
    $if $param!~/^r['"]/
        $param = "r\"$param\""
    $if !$re_cache{$param}
        $re_index++
        my $blk=MyDef::compileutil::get_named_block("regex_compile")
        push @$blk, "re$re_index = re.compile($param)\n"
        $re="re$re_index"
        $re_cache{$param}=$re
    $else
        $re=$re_cache{$param}

    &call return_newblock, if
        push @src, "$(comment) $param", "m = $re.match(src, src_pos)","if m:", "INDENT", "src_pos=m.end()","BLOCK","DEDENT"


